{"version":3,"sources":["views/RegisterView.module.css","views/LogInView.js"],"names":["module","exports","LogInView","state","email","password","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","props","onLogin","resetForm","this","className","styles","container","themeLight","form","formDark","onSubmit","autoComplete","label","t","input","type","onChange","btn","btnDark","Component","mapDispatchToProps","authOperations","logIn","withTranslation","connect","getTheme"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,KAAO,2BAA2B,SAAW,+BAA+B,MAAQ,4BAA4B,MAAQ,4BAA4B,IAAM,0BAA0B,QAAU,gC,mJCQtPC,E,4MAOJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,cAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKC,MAAMC,QAAQ,EAAKZ,OACxB,EAAKa,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEP,MAAO,GAAIC,SAAU,M,4CAGvC,WAAU,IAAD,EACqBY,KAAKd,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,qBAAKa,UAAWC,IAAOC,UAAvB,SACE,uBACEF,UAAWD,KAAKH,MAAMO,WAAaF,IAAOG,KAAOH,IAAOI,SACxDC,SAAUP,KAAKL,aACfa,aAAa,MAHf,UAKE,wBAAOP,UAAWC,IAAOO,MAAzB,UACGT,KAAKH,MAAMa,EAAE,kBACd,uBACET,UAAWC,IAAOS,MAClBC,KAAK,OACLpB,KAAK,QACLC,MAAON,EACP0B,SAAUb,KAAKX,kBAGnB,wBAAOY,UAAWC,IAAOO,MAAzB,UACGT,KAAKH,MAAMa,EAAE,qBACd,uBACET,UAAWC,IAAOS,MAClBC,KAAK,WACLpB,KAAK,WACLC,MAAOL,EACPyB,SAAUb,KAAKX,kBAGnB,wBACEY,UAAWD,KAAKH,MAAMO,WAAaF,IAAOY,IAAMZ,IAAOa,QACvDH,KAAK,SAFP,SAIGZ,KAAKH,MAAMa,EAAE,2B,GA9DFM,aA2ElBC,EAAqB,CACzBnB,QAASoB,IAAeC,OAIXC,wBACbC,aAXsB,SAAAnC,GACpB,MAAO,CACHkB,WAAYkB,YAASpC,MASF+B,EAAzBI,CAA6CpC","file":"static/js/login-view.8305bfb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterView_container__poo8e\",\"form\":\"RegisterView_form__TM3g0\",\"formDark\":\"RegisterView_formDark__3KI_G\",\"label\":\"RegisterView_label__3Dzya\",\"input\":\"RegisterView_input__1KNP1\",\"btn\":\"RegisterView_btn__3n_jf\",\"btnDark\":\"RegisterView_btnDark__1z6WD\"};","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { getTheme } from '../redux/theme/theme-selectors';\nimport { authOperations } from '../redux/auth';\nimport styles from './RegisterView.module.css';\n\n\nclass LogInView extends Component {\n  static propTypes = {\n    themeLight: PropTypes.bool.isRequired,\n    t: PropTypes.func,\n    onLogin: PropTypes.func.isRequired,\n  };\n\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onLogin(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className={styles.container}>\n        <form\n          className={this.props.themeLight ? styles.form : styles.formDark}\n          onSubmit={this.handleSubmit}\n          autoComplete=\"off\"\n        >\n          <label className={styles.label}>\n            {this.props.t(\"loginFormEmail\")}\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            {this.props.t(\"loginFormPassword\")}\n            <input\n              className={styles.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button\n            className={this.props.themeLight ? styles.btn : styles.btnDark}\n            type=\"submit\"\n          >\n            {this.props.t(\"loginFormBtn\")}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        themeLight: getTheme(state),\n    };\n};\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\n\nexport default withTranslation()(\n  connect(mapStateToProps, mapDispatchToProps)(LogInView)\n);\n"],"sourceRoot":""}